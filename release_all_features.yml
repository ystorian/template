# File sourced from https://github.com/ystorian/template

name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: hecrj/setup-rust-action@v1
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Build release (Linux)
        run: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse cargo build --release --target=x86_64-unknown-linux-gnu

      - run: strip target/x86_64-unknown-linux-gnu/release/{package_name}

      - uses: actions/upload-artifact@v3
        with:
          name: build-linux
          path: target/x86_64-unknown-linux-gnu/release/{package_name}

  build-linux-all-features:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: hecrj/setup-rust-action@v1
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Build release all features (Linux)
        run: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse cargo build --release --target=x86_64-unknown-linux-gnu

      - uses: actions/upload-artifact@v3
        with:
          name: build-linux-all-features
          path: target/x86_64-unknown-linux-gnu/release/{package_name}

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: hecrj/setup-rust-action@v1
        with:
          targets: x86_68-pc-windows-msvc

      - name: Build release (Windows)
        run: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse cargo build --release --target=x86_64-pc-windows-msvc

      - uses: actions/upload-artifact@v3
        with:
          name: build-windows
          path: target/x86_64-pc-windows-msvc/release/{package_name}.exe

  build-windows-all-features:
    runs-on: windows-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: hecrj/setup-rust-action@v1
        with:
          targets: x86_64-pc-windows-msvc

      - name: Build release (Windows)
        run: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse cargo build --release --target=x86_64-pc-windows-msvc

      - uses: actions/upload-artifact@v3
        with:
          name: build-windows-all-features
          path: target/x86_64-pc-windows-msvc/release/{package_name}.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: hecrj/setup-rust-action@v1
        with:
          targets: x86_64-apple-darwin

      - name: Build release (MacOS)
        run: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse cargo build --release --target=x86_64-apple-darwin

      - uses: actions/upload-artifact@v3
        with:
          name: build-macos
          path: target/x86_64-apple-darwin/release/{package_name}

  build-macos-all-features:
    runs-on: macos-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: hecrj/setup-rust-action@v1
        with:
          targets: x86_64-apple-darwin

      - name: Build release (MacOS)
        run: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse cargo build --release --target=x86_64-apple-darwin

      - uses: actions/upload-artifact@v3
        with:
          name: build-macos-all-features
          path: target/x86_64-apple-darwin/release/{package_name}

  release:
    needs: [
      build-linux,
      build-linux-all-features,
      build-windows,
      build-windows-all-features,
      build-macos,
      build-macos-all-features
    ]
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - uses: actions/download-artifact@v3
        with:
          name: build-linux
          path: build-linux
      - run: mv build-linux/{package_name} build-linux/{package_name}-${{ steps.get_version.outputs.VERSION }}-linux-x86_64

      - uses: actions/download-artifact@v3
        with:
          name: build-linux-all-features
          path: build-linux-all-features
      - run: mv build-linux-all-features/{package_name} build-linux/{package_name}-all-features-${{ steps.get_version.outputs.VERSION }}-linux-x86_64

      - uses: actions/download-artifact@v3
        with:
          name: build-windows
          path: build-windows
      - run: mv build-windows/{package_name} build-windows/{package_name}-${{ steps.get_version.outputs.VERSION }}-windows-x86_64.exe

      - uses: actions/download-artifact@v3
        with:
          name: build-windows-all-features
          path: build-windows-all-features
      - run: mv build-windows/{package_name} build-windows/{package_name}-all-features-${{ steps.get_version.outputs.VERSION }}-windows-x86_64.exe

      - uses: actions/download-artifact@v3
        with:
          name: build-macos
          path: build-macos
      - run: mv build-macos/{package_name} build-macos/{package_name}-${{ steps.get_version.outputs.VERSION }}-macos-x86_64.exe

      - uses: actions/download-artifact@v3
        with:
          name: build-macos-all-features
          path: build-macos-all-features
      - run: mv build-macos/{package_name} build/macos/{package_name}-all-features-${{ steps.get_version.outputs.VERSION }}-macos-x86_64

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            build-linux/*
            build-macos/*
            build-windows/*
